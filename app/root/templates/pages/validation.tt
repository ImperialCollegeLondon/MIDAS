[%- contactUsURI = c.uri_for("/contact");
    midas_manifest = c.config.midas_manifest || "midas_manifest_v3.xlsx" %]

<article class="container">

  <h1>Validating a sample manifest</h1>

  <p>
    You can use this form to upload a sample manifest and validate it
    against the
    <a class="ext" href="https://raw.githubusercontent.com/sanger-pathogens/HICF_checklist/master/HICF_checklist.conf">
      HICF checklist</a>.
  </p>
  <p class="small">
    <strong>Note:</strong> your uploaded file is not stored unless errors are
    found. If validation errors are found, we cache an edited version of the
    file, adding error messages to any invalid lines in the CSV file. You can
    then download a copy of this validated file using a link that will appear
    below. Validated files are cached for one hour and then deleted.
  </p>

  <form id="validation-form" action="/validate" method="post" enctype="multipart/form-data">
    <div class="form-group">
      <input type="file" name="csv" id="csv">
    </div>
    <button type="submit" class="btn btn-default btn-sm">
      Validate
      <i id="validation-spinner" style="display: none" class="fa fa-spinner fa-pulse fa-spin"></i>
    </button>
  </form>

  <div id="validation-result">
    <div id="validation-success" class="panel panel-success" style="display: none">
      <div class="panel-heading">Valid</div>
      <div class="panel-body">
        Your input file has been successfully validated.
      </div>
    </div>
    <div id="validation-fail" class="panel panel-danger" style="display: none">
      <div class="panel-heading">Invalid</div>
      <div class="panel-body">
        Your input file is <strong>not</strong> valid according to the
        <a class="ext" href="https://raw.githubusercontent.com/sanger-pathogens/HICF_checklist/master/HICF_checklist.conf">
          HICF checklist</a>. You can download a copy of your file with
        validation error messages <a id="invalid-download" href="#">here</a>.
      </div>
    </div>
    <div id="validation-error" class="panel panel-warning" style="display: none">
      <div class="panel-heading">Validation error</div>
      <div class="panel-body">
        There was a problem validating your file:
        <span id="validation-error-message"></span>
      </div>
    </div>
  </div>

  <h1>Validating a manifest locally</h1>

  <p>
    This section explains how to use the <code>validate_manifest</code> perl
    script to check the contents of a sample manifest before deposition with
    the HICF sample data repository.
  </p>

  <section>

    <h2>Install the perl module and script</h2>

    <p>
      The perl module is available from
      <a class="ext" href="https://github.com/sanger-pathogens/Bio-Metadata-Validator/">
        GitHub</a>. You can either clone the repository or download it as a
      <a class="dl" href="https://github.com/sanger-pathogens/Bio-Metadata-Validator/tarball/master">
        tar ball</a>. Either way, the module needs to be built using
      <a class="ext" href="http://dzil.org/">Dist::Zilla</a> before it can
      be installed.
    </p>
    <p>
      The easiest way to install perl modules is probably to use
      <code>cpanm</code> (see
      <a class="ext" href="https://github.com/miyagawa/cpanminus">
        https://github.com/miyagawa/cpanminus</a>). Once <code>cpanm</code>
      is installed, you can use it to install <code>Dist::Zilla</code> and,
      with <code>Dist::Zilla</code> available, you can unpack and build the
      validator distribution:
    </p>
    <pre>
shell% tar zxf sanger-pathogens-Bio-Metadata-Validator-xxxxxxx.tar.gz
shell% cd sanger-pathogens-Bio-Metadata-Validator-xxxxxxx
shell% dzil build
[DZ] beginning to build Bio-Metadata-Validator
[DZ] guessing dist's main_module is lib/Bio/Metadata/Validator.pm
[DZ] writing Bio-Metadata-Validator in Bio-Metadata-Validator-x.xxxxxx
[DZ] building archive with Archive::Tar::Wrapper
[DZ] writing archive to Bio-Metadata-Validator-x.xxxxxx.tar.gz
[DZ] built in Bio-Metadata-Validator-x.xxxxxx</pre>

    <p>
      You can now install the Bio-Metadata-Validator tar file:
    </p>
    <pre>
shell% cpanm Bio-Metadata-Validator-x.xxxxxx.tar.gz
...</pre>

    <p>
      After installation you should be able to run the script something like:
    </p>

    <pre>
shell% validate_manifest
validate_manifest [-chiov] [long options...] <filename>
      -c --config           path to the configuration file that defines the
                            checklist
      -o --output           write the validated CSV file to this file
      -i --write-invalid    write invalid rows only
      -v --verbose-errors   show full field descriptions in validation
                            error messages
      -h --help             print usage message
shell% </pre>

    <p>
      You can use <code>validate_manifest -h</code> to see more detailed
      documentation.
    </p>

  </section>
  <section>

    <h2>Download the ontologies and taxonomy data</h2>

    <p>
      The checklist requires that certain fields (e.g. location) contain
      ontology terms and others (e.g. scientific_name) contain valid scientific
      names or tax IDs for organisms. The validation script can check that
      values in your manifest are found in the required ontologies or the
      taxonomy tree, but you need to download the data files and store them
      locally first.
    </p>
    <p>
      These are the three ontologies files that are needed:
    </p>
    <ul>
      <li>
        <a class="ext" href="http://purl.obolibrary.org/obo/subsets/envo-basic.obo">
          http://purl.obolibrary.org/obo/subsets/envo-basic.obo</a> (0.5Mb)
      </li>
      <li>
        <a class="ext" href="http://www.brenda-enzymes.info/ontology/tissue/tree/update/update_files/BrendaTissueOBO">
          http://www.brenda-enzymes.info/ontology/tissue/tree/update/update_files/BrendaTissueOBO</a>
        (1.8Mb)
      </li>
      <li>
        <a class="ext" href="http://purl.obolibrary.org/obo/gaz.obo">
          http://purl.obolibrary.org/obo/gaz.obo</a> (180Mb)
      </li>
    </ul>
    <p>
      There is one taxonomy file, but it is only available as a tar archive:
    </p>
    <ul>
      <li>
        <a class="ext" href="ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump.tar.gz">
          ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump.tar.gz</a> (30Mb)
      </li>
    </ul>
    <p>
      After downloading the tar file, you need to extract the "names.dmp" file:
    </p>
    <pre>
shell% tar zxf taxdump.tar.gz names.dmp</pre>
    <p>
      If you change the names of the files for any reason, you will need to
      edit the checklist configuration file accordingly.
    </p>

  </section>
  <section>

    <h2>Build your manifest</h2>

    <p>
      Your sample data must be formatted as a "comma-separated values" (CSV) file. If
      you have sample data in Excel, you can export a CSV file using:
    </p>

      <p>
        File <i class="fa fa-long-arrow-right"></i>
        Save As... <i class="fa fa-long-arrow-right"></i>
        Format: Window Comma Separated (.csv)
      </p>

    <p>
      If you are creating the CSV file using a script or similar, you can see an
      example file in the bundle containing the Perl module and README. You can
      <a class="dl" href="https://github.com/sanger-pathogens/HICF_checklist/tarball/master">
        download</a> a tar archive containing the
      <a class="dl" href="https://raw.githubusercontent.com/sanger-pathogens/HICF_checklist/master/[% midas_manifest %]">
        manifest template</a> and example manifests in
      <a class="dl" href="https://raw.githubusercontent.com/sanger-pathogens/HICF_checklist/master/example_manifest.xlsx">
        Excel</a> and
      <a class="dl" href="https://raw.githubusercontent.com/sanger-pathogens/HICF_checklist/master/example_manifest.csv">
        CSV</a> formats.
    </p>

  </section>
  <section>

    <h2>Validate the manifest</h2>

    <p>
      Download the checklist
      <a class="ext" href="https://raw.githubusercontent.com/sanger-pathogens/HICF_checklist/master/HICF_checklist.conf">
        configuration file</a>. It's easiest to run <code>validate_manifest</code>
      in the directory containing the config file, your manifest, and the
      ontology files ("envo-basic.obo", "BrendaTissueOBO", "gaz.obo").
    </p>

    <pre>
shell% validate_manifest -c HICF_checklist.conf example_manifest.csv
input data are valid</pre>

    <p>
      Error messages are appended to invalid rows as an extra column, so that you can
      re-import the file into Excel and view the error messages along with the data.
      If you find problems with your manifest, you can write out the invalid rows and
      check the embedded error messages:
    </p>

    <pre>
shell% validate_manifest -c HICF_checklist.conf -o invalid_rows.csv -i broken_manifest.csv
input data are invalid. Found 1 invalid row.
wrote only invalid rows from validated file to 'invalid_rows.csv'.
shell% less invalid_rows.csv
"raw data accession","sample accession","sample description","collected at","tax ID","scientific name","collected by",source,"collection date",location,"host associated","specific host","host disease status","host isolation source","patient location","isolation source",serovar,"other classification",strain,isolate,"antimicrobial resistance"
ERR000001,ERS000001,"Example description",CAMBRIDGE,703339,"Staphylococcus aureus 04-02981","Tate JG, Keane J",123,05/10/2013,GAZ:00444180,yes,"Homo sapiens",healthy,BTO:0000645,inpatient,,I,,630,,"tetracyclin;S;40,erythromycin;R;50;Peru","[errors found on row 1] [value in field 'collection_date' is not valid]"</pre>

    <p>
      Scrolling to the end of the line you can see that there was a single
      error on a one row of the manifest. In this case the date was specified
      in an invalid format, using the default Excel format (05/10/2013) rather
      than the required ISO format (e.g. 2013-10-05).
    </p>

  </section>

  <section id="resources">

    <h2>Resources</h2>

    <p>
      These GitHub repositories contain the files that you will need to run the
      validator:
    </p>

    <dl class="dl-horizontal">
      <dt>
      <a class="ext" href="https://github.com/sanger-pathogens/Bio-Metadata-Validator">
          Bio-Metadata-Validator</a>
      </dt>
      <dd>
        Perl module
      </dd>
      <dt>
        <a class="ext" href="https://github.com/sanger-pathogens/HICF_checklist">
          HICF_checklist</a>
      </dt>
      <dd>
        Checklist and examples
      </dd>
    </dl>

[% BLOCK manifest_links;
files = {
  $midas_manifest => 'manifest template in Excel format',
  'example_manifest.csv' => 'example of a valid manifest in CSV format',
  'example_manifest.xlsx' => 'example of a valid manifest in Excel format',
  'HICF_checklist.conf' => 'checklist configuration file',
  '00README.txt' => 'README containing this documentation',
  'broken_manifest.csv' => 'example of an invalid manifest in CSV format',
  'invalid_rows.csv' => 'invalid rows found when validating <code>broken_manifest.csv</code>',
};
FOREACH file IN files.keys.sort -%]
<dt><a class="ext" href="https://raw.githubusercontent.com/sanger-pathogens/HICF_checklist/master/[% file %]">[% file %]</a></dt>
<dd>[% files.$file %]</dd>
[% END; # of FOREACH
END -%]

    <p>
      You can download the contents of the checklist tar file individually too:
    </p>

    <dl class="dl-horizontal">
      [% PROCESS manifest_links %]
    </dl>

    <p>
      These are the ontology files that are required for the HICF checklist:
    </p>

    <dl class="dl-horizontal">
      <dt>
        <a class="ext" href="http://purl.obolibrary.org/obo/subsets/envo-basic.obo">
          http://purl.obolibrary.org/obo/subsets/envo-basic.obo</a>
      </dt>
      <dd>
        Environment ontology
      </dd>
      <dt>
        <a class="ext" href="http://www.brenda-enzymes.info/ontology/tissue/tree/update/update_files/BrendaTissueOBO">
          http://www.brenda-enzymes.info/ontology/tissue/tree/update/update_files/BrendaTissueOBO</a>
        (1.8Mb)
      </dt>
      <dd>
        BRENDA tissue ontology
      </dd>
      <dt>
        <a class="ext" href="http://purl.obolibrary.org/obo/gaz.obo">
          http://purl.obolibrary.org/obo/gaz.obo</a>
      </dt>
      <dd>
        Gazetteer ontology
      </dd>
      <dt>
        <a class="ext" href="ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump.tar.gz">
          ftp://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump.tar.gz</a>
      </dt>
      <dd>
        NCBI taxonomy
      </dd>
    </dl>

  </section>

</article>

