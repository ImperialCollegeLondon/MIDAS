
<section class="container" id="search">

  <h2>Bulk searching</h2>

  <p>
    This form allows you to upload a CSV file that contains a set of criteria
    for searching the available sample metadata. Results are returned as
    another CSV file, suitable for viewing directly in Excel.
  </p>

  <form id="upload-form" action="/search" method="post" enctype="multipart/form-data">
    <div class="form-group">
      <input type="file" name="query" id="query">
    </div>
    <button type="submit" class="btn btn-default btn-sm">Search</button>
  </form>

  <h2>Building your searches</h2>

  <p>
    The uploaded CSV file must contain at least two rows. The first row, the
    header, must contain a list of the fields that are to be searched.
    Subsequent rows should contain the values specifying your search(es).
  </p>

  <h3>Specifying search fields</h3>

  <p>
    The fields in the header row of your CSV file must be chosen from the
    following list of standard column headers for HICF metadata:
  </p>
  <ul class="left">
    <li><tt>sample_id</tt></li>
    <li><tt>manifest_id</tt></li>
    <li><tt>raw_data_accession</tt></li>
    <li><tt>sample_accession</tt></li>
    <li><tt>donor_id</tt></li>
    <li><tt>sample_description</tt></li>
    <li><tt>submitted_by</tt></li>
    <li><tt>tax_id</tt></li>
    <li><tt>scientific_name</tt></li>
    <li><tt>collected_by</tt></li>
    <li><tt>source</tt></li>
    <li><tt>collection_date</tt></li>
  </ul>
  <ul>
    <li><tt>location</tt></li>
    <li><tt>host_associated</tt></li>
    <li><tt>specific_host</tt></li>
    <li><tt>host_disease_status</tt></li>
    <li><tt>host_isolation_source</tt></li>
    <li><tt>patient_location</tt></li>
    <li><tt>isolation_source</tt></li>
    <li><tt>serovar</tt></li>
    <li><tt>other_classification</tt></li>
    <li><tt>strain</tt></li>
    <li><tt>isolate</tt></li>
  </ul>

  <div class="example-panel clear">
    <span class="label label-primary">Example input</span>
    <pre>
submitted_by,host_isolation_source,tax_id</pre>
  </div>

  <p>
    For a search file with this CSV header, for example, every subsequent row
    should contain three values, giving the name of the submitting site, the
    BRENDA ontology term for the isolation source on the host organism, and the
    tax ID of the host organism.
  </p>

  <h4>Specifying dates</h4>

  <p>
    As well as searching with a specific date, using
    <code>collection_date</code>, you can also search using date ranges,
    with the search fields <code>collected_before</code> and
    <code>collected_after</code>. Note that if you specify
    <code>collected_after</code>, you will find samples that were collected
    <b>on or after</b> the specified date.
  </p>

  <div class="example-panel">
    <span class="label label-primary">Example input</span>
    <pre>
tax_id,collected_after,collected_before</pre>
  </div>

  <h3>Specifying search values</h3>

  <p>
    Each row of the uploaded CSV file specifies a separate query.
  </p>

  <div class="example-panel">
    <span class="label label-primary">Example input</span>
    <pre>
scientific_name,collected_after,collected_before
"Staphylococcus aureus",2014-10-01,2015-06-01
"Streptococcus pneumoniae",2010-01-01,</pre>
  </div>

  <p>
    This example shows two searches, the first returning all <em>Staphylococcus
    aureus</em> samples collected between 1st October 2014 and 30th May 2015
    (end date is not included in the range). For the second query, because
    the final field is empty (note the trailing comma), the search returns all
    <em>Streptococcus pneumoniae</em> samples collected since 1st January 2010,
    ignoring the <code>collected_before</code> value.
  </p>

  <h3>Examples</h3>

  <h4>Find all Mycobacterium avium samples deposited by WTSI</h4>

  <p>
    Search the <code>collected_by</code> and <code>tax_id</code> fields:
  </p>

  <div class="example-panel">
    <span class="label label-primary">Example input</span>
    <pre>
collected_by,tax_id
CAMBRIDGE,1764</pre>
  </div>

  <h4>Find all Acinetobacter baumannii samples collected by Cambridge</h4>

  <p>
    When searching for samples from specific organisms, you can use either the
    <code>tax_id</code> or <code>scientific_name</code> fields:
  </p>

  <div class="example-panel">
    <span class="label label-primary">Example input</span>
    <pre>
collected_by,scientific_name
CAMBRIDGE,"Acinetobacter baumannii"</pre>
  </div>

  <h4>Find all <em>Staphylococcus aureus</em> samples from blood that were collected by Oxford</h4>

  <div class="example-panel">
    <span class="label label-primary">Example input</span>
    <pre>
collected_by,scientific_name,host_isolation_source
OXFORD,"Staphylococcus aureus",BTO:0000089</pre>
  </div>

  <h4>Get metadata for a specific set of samples</h4>

  <div class="example-panel">
    <span class="label label-primary">Example input</span>
    <pre>
sample_accession
ERS123456
ERS234567
ERS345678</pre>
  </div>

  <h3>Results</h3>

  <p>
    The output from a search is another CSV file, containing all of the
    metadata for matching samples. If you specified more than one query in your
    input file, the results from all queries are concatenated in the output
    file and an additional column, <tt>query_number</tt>, is added, giving the
    number of the query that generated each row. Queries are counted starting
    from 1.
  </p>

  <div class="example-panel">
    <span class="label label-primary">Example output</span>
    <pre>
sample_id,manifest_id,raw_data_accession,sample_accession,donor_id,sample_description,submitted_by,tax_id,scientific_name,collected_by,source,collection_date,location,host_associated,specific_host,host_disease_status,host_isolation_source,patient_location,isolation_source,serovar,other_classification,strain,isolate,amr,query_number
12332,8879DC0F-9AB4-443E-9A90-D8EF8892A20B,SRR1735577,SAMN02995393,D00554664,"Whole genome sequencing of mycobacteria",OXFORD,1764,"Mycobacterium abscessus",,,2012-14-10,GAZ:00456742,yes,"Homo sapiens",carriage,BTO:001297,inpatient,,"not available: not collected","not available: not collected",F54667,,,1
12332,8879DC0F-9AB4-443E-9A90-D8EF8892A20B,SRR1735509,SAMN02995363,D00054336,"Whole genome sequencing of mycobacteria",OXFORD,1764,"Mycobacterium abscessus",,,2012-14-06,GAZ:00567427,yes,"Homo sapiens",carriage,BTO:001297,inpatient,,"not available: not collected","not available: not collected",F54667,,,1
...</pre>
  </dir>

  <h2>Searching via the RESTful interface</h2>

  <p>
    Instead of manually uploading searches using the form in this page, you can
    submit queries programmatically using the RESTful interface built into the
    website. You can see full documentation on using the RESTful interface in
    the <a href="[% c.uri_for('/api') %]">API docs</a> page.
  </p>

  <div class="example-panel">
    <span class="label label-primary">Example output</span>
    <pre>
$ curl -i -H "Authorization: jtate:FH9ds9dg987KkJ24jK55kJ23kKkoB20Q" \
  -H "Accept: text/csv" -F "query=@search.csv" [% c.uri_for('/search') %]
HTTP/1.0 200 OK
Date: Fri, 15 Apr 2016 14:14:55 GMT
Content-Type: text/csv; charset=UTF-8
Content-Disposition: attachment; filename="search_result.csv"
Content-Length: 11112

sample_id,manifest_id,raw_data_accession,sample_accession,donor_id,sample_description,submitted_by,tax_id,scientific_name,collected_by,source,collection_date,location,host_associated,specific_host,host_disease_status,host_isolation_source,patient_location,isolation_source,serovar,other_classification,strain,isolate,amr,query_number
12332,8879DC0F-9AB4-443E-9A90-D8EF8892A20B,SRR1735577,SAMN02995393,D00554664,"Whole genome sequencing of mycobacteria",OXFORD,1764,"Mycobacterium abscessus",,,2012-14-10,GAZ:00456742,yes,"Homo sapiens",carriage,BTO:001297,inpatient,,"not available: not collected","not available: not collected",F54667,,,1
12332,8879DC0F-9AB4-443E-9A90-D8EF8892A20B,SRR1735509,SAMN02995363,D00054336,"Whole genome sequencing of mycobacteria",OXFORD,1764,"Mycobacterium abscessus",,,2012-14-06,GAZ:00567427,yes,"Homo sapiens",carriage,BTO:001297,inpatient,,"not available: not collected","not available: not collected",F54667,,,1
...</pre>
  </div>




</section>
